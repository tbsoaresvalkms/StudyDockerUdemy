docker container ls
docker container ls -a
docker container rm $(container ls -q) -> remove todos containers
docker container run [nome_imagem]
docker container run [nome_imagem] [arg1] [arg2] ... 
docker container run -p [00:00]
docker container run -v [dir:dir] 
docker container run --name [nome_container]
docker container run --rm [nome_container] -> remove o container quando finalizar o processo
docker container run --net [nome_rede] -> bridge rede padrao

docker image build -t [nome_imagem] [diretorio_Dockerfile]
docker image tag [nome_imagem] tbsoaresvalkms/[nome_imagem]:1.0
docker image build --build-arg nome_arg=valor_arg -t [nome_imagem] [diretorio_Dockerfile]

docker login --username=tbsoaresvalkms

docker image push [nome_imagem_completo]

docker container start -i [nome_container]
docker container stop [nome_container]



docker network ls
tipos de networks:
    none -> sem interface
    bridge -> interface do docker
    host -> interface direto do sistema operacional


docker network create --driver bridge [nome_rede]
docker network connect [rede] [containe] -> container tera acesso a rede (nao e bidirecional)
docker network disconnect [rede] [container] 

docker container rm $(docker container ls -qa) && docker image rm $(docker image ls -q)



docker-compose exec db psql -U postgres -c '\l' -> db e o nome do service no docker compose
docker-compose exec db psql -U postgres -f /scripts/check.sql  -> executa o script check (passado por volume)
docker-compose exec db psql -U postgres -d 'email_sender' -c 'select * from emails'
docker-compose logs -f -t
docker-compose scale service=number
docker-compose up
docker-compose down



